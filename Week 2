{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Week 2","provenance":[],"authorship_tag":"ABX9TyOH3hj1om6HoB9uaxs/pchh"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YGVxyzfZxFZj","executionInfo":{"status":"ok","timestamp":1614956383608,"user_tz":-420,"elapsed":4300,"user":{"displayName":"jason surya","photoUrl":"","userId":"00226636885965102653"}},"outputId":"7f6c5495-53de-47ad-8aed-cbc82ef13955"},"source":["# Load CSV file from my google drive \n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377},"id":"7yNEMwj-l1Hs","executionInfo":{"status":"ok","timestamp":1614957043910,"user_tz":-420,"elapsed":2639,"user":{"displayName":"jason surya","photoUrl":"","userId":"00226636885965102653"}},"outputId":"a933a921-a6af-4e6a-83f4-87688c0a2425"},"source":["import pandas as pd\r\n","import numpy as np\r\n","import matplotlib.pyplot as plt \r\n","from sklearn.neighbors import KNeighborsClassifier\r\n","from sklearn.metrics import accuracy_score, mean_squared_error, mean_absolute_error\r\n","from sklearn import preprocessing\r\n","from sklearn.model_selection import train_test_split\r\n","\r\n","path = '/content/drive/MyDrive/Colab Notebooks/listings.csv'\r\n","df = pd.read_csv(path)\r\n","\r\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>price</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>49091</td>\n","      <td>COZICOMFORT LONG TERM STAY ROOM 2</td>\n","      <td>266763</td>\n","      <td>Francesca</td>\n","      <td>North Region</td>\n","      <td>Woodlands</td>\n","      <td>1.44255</td>\n","      <td>103.79580</td>\n","      <td>Private room</td>\n","      <td>83</td>\n","      <td>180</td>\n","      <td>1</td>\n","      <td>2013-10-21</td>\n","      <td>0.01</td>\n","      <td>2</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50646</td>\n","      <td>Pleasant Room along Bukit Timah</td>\n","      <td>227796</td>\n","      <td>Sujatha</td>\n","      <td>Central Region</td>\n","      <td>Bukit Timah</td>\n","      <td>1.33235</td>\n","      <td>103.78521</td>\n","      <td>Private room</td>\n","      <td>81</td>\n","      <td>90</td>\n","      <td>18</td>\n","      <td>2014-12-26</td>\n","      <td>0.28</td>\n","      <td>1</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>56334</td>\n","      <td>COZICOMFORT</td>\n","      <td>266763</td>\n","      <td>Francesca</td>\n","      <td>North Region</td>\n","      <td>Woodlands</td>\n","      <td>1.44246</td>\n","      <td>103.79667</td>\n","      <td>Private room</td>\n","      <td>69</td>\n","      <td>6</td>\n","      <td>20</td>\n","      <td>2015-10-01</td>\n","      <td>0.20</td>\n","      <td>2</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>71609</td>\n","      <td>Ensuite Room (Room 1 &amp; 2) near EXPO</td>\n","      <td>367042</td>\n","      <td>Belinda</td>\n","      <td>East Region</td>\n","      <td>Tampines</td>\n","      <td>1.34541</td>\n","      <td>103.95712</td>\n","      <td>Private room</td>\n","      <td>206</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>2019-08-11</td>\n","      <td>0.15</td>\n","      <td>9</td>\n","      <td>353</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>71896</td>\n","      <td>B&amp;B  Room 1 near Airport &amp; EXPO</td>\n","      <td>367042</td>\n","      <td>Belinda</td>\n","      <td>East Region</td>\n","      <td>Tampines</td>\n","      <td>1.34567</td>\n","      <td>103.95963</td>\n","      <td>Private room</td>\n","      <td>94</td>\n","      <td>1</td>\n","      <td>22</td>\n","      <td>2019-07-28</td>\n","      <td>0.22</td>\n","      <td>9</td>\n","      <td>355</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      id  ... availability_365\n","0  49091  ...              365\n","1  50646  ...              365\n","2  56334  ...              365\n","3  71609  ...              353\n","4  71896  ...              355\n","\n","[5 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HPmiELyI56mu","executionInfo":{"status":"ok","timestamp":1614956536358,"user_tz":-420,"elapsed":1132,"user":{"displayName":"jason surya","photoUrl":"","userId":"00226636885965102653"}},"outputId":"c0fcf052-022d-41ce-f4ac-e74013dd8857"},"source":["for i in df:\r\n","  print(i, df[i].dtypes)\r\n","  if df[i].isna().values.any() and df[i].dtypes != object:\r\n","      df[i] = df[i].fillna(df[i].mean())\r\n","\r\n","train, test = train_test_split(df, test_size=0.1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["id int64\n","name object\n","host_id int64\n","host_name object\n","neighbourhood_group object\n","neighbourhood object\n","latitude float64\n","longitude float64\n","room_type object\n","price int64\n","minimum_nights int64\n","number_of_reviews int64\n","last_review object\n","reviews_per_month float64\n","calculated_host_listings_count int64\n","availability_365 int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vIp2n4eYFEiv","executionInfo":{"status":"ok","timestamp":1614961263526,"user_tz":-420,"elapsed":591,"user":{"displayName":"jason surya","photoUrl":"","userId":"00226636885965102653"}},"outputId":"66fed0ec-29e7-4bec-9e59-9daad2d72dd1"},"source":["KNN = KNeighborsClassifier(n_neighbors = 4).fit(train[[\"availability_365\", \"number_of_reviews\"]], train[\"price\"])\r\n","newClassification = KNN.predict([[365,18],[365,20]])\r\n","print(newClassification)\r\n","\r\n","classification = KNN.predict(test[[\"availability_365\", \"number_of_reviews\"]])\r\n","accuracy = accuracy_score(test[\"price\"], classification)\r\n","MAE = mean_absolute_error(test[\"price\"], classification)\r\n","MSE = mean_squared_error(test[\"price\"], classification)\r\n","\r\n","print(\" ACC : %.2f\" % accuracy)\r\n","print(\" MAE : %.2f\" % MAE)\r\n","print(\" MSE : %.2f\" % MSE)"],"execution_count":42,"outputs":[{"output_type":"stream","text":["[31 28]\n"," ACC : 0.03\n"," MAE : 121.95\n"," MSE : 95570.95\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T7NCGaN4Gjy8","executionInfo":{"status":"ok","timestamp":1614960729564,"user_tz":-420,"elapsed":921,"user":{"displayName":"jason surya","photoUrl":"","userId":"00226636885965102653"}},"outputId":"a9d26dbb-1421-44dd-b173-98ff90eafab9"},"source":["Ks = 10\r\n","accuracy = np.zeros((Ks-1))\r\n","ConfustionMx = [];\r\n","for n in range(1, Ks):    \r\n","    KNN = KNeighborsClassifier(n_neighbors = n).fit(train[[\"availability_365\", \"number_of_reviews\"]], train[\"price\"])  \r\n","    classification = KNN.predict(test[[\"availability_365\", \"number_of_reviews\"]])\r\n","    accuracy[n - 1] = accuracy_score(test[\"price\"], classification)\r\n","    \r\n","print(\"Best  ACC : %.2f\" % accuracy.max(), \", with k = \", accuracy.argmax() + 1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Best  ACC : 0.03 , with k =  4\n"],"name":"stdout"}]}]}